## Author: Balakumaran Venkataraman
##
## Add to bashrc
##   source podrc
##
alias k='kubectl'
alias nodes='kubectl get nodes -o wide'
alias ns='kubectl get ns'
alias pods='kubectl get pods -A -o wide'
alias dep='kubectl get deployment -A'

alias svc='kubectl get svc -A'
alias ep='kubectl get ep -A'

alias sc='kubectl get sc'
alias pv='kubectl get pv'
alias pvc='kubectl get pvc -A'


function kg
{
#kubectl get
echo ">>>> $*"

    if [[ -z $1 ]];then
        echo "USAGE: kg <p|d|sf|r|c|s|j|e> # For pod|deploy|deamonset|statefulset|replicaset|cm|service|job|event"
        return
    fi

    construct=$1
    shift
    case $construct in
    p*)
        kubectl get pods -n $@
        ;;
    d)
        kubectl get deploy -n $@
        ;;
    ds*)
        kubectl get daemonset -n $@
        ;;    
    sf*)
        kubectl get statefulset -n $@
        ;;
    r*)
        kubectl get replicaset -n $@
        ;;
    s)
        kubectl get svc -n $@
        ;;
    c*)
        kubectl get cm -n $@
        ;;
    j*)
        kubectl get job -n $@
        ;;
    e*)
        kubectl get event -n $@
        ;;
    esac
}

function podexec
{
echo ">>>> $*"

read -r podns podname <<< $(pods |grep $1 |awk '{print $1,$2}')

shift
if [[ "$1" == bash ]]; then
     kubectl exec -it ${podname} -n ${podns}  -- sh -c "bash || sh"
else
  kubectl exec -it ${podname} -n ${podns} -- $@
fi
}

function podssh
{
podexec $1 bash
}

function poddel
{

echo ">>>> $*"
read -r podns podname <<< $(pods |grep $1 |awk '{print $1,$2}')

kubectl delete pods -n ${podns} ${podname}
}

function poddelf
{

echo ">>>> $*"
read -r podns podname <<< $(pods |grep $1 |awk '{print $1,$2}')

kubectl delete pods -n ${podns} ${podname} --grace-period=0 --force
} 

function poddes
{
echo ">>>> $*"
read -r podns podname <<< $(pods |grep $1 |awk '{print $1,$2}')

kubectl describe pods -n ${podns} ${podname}
}

function podedit
{

echo ">>>> $*"
read -r podns podname <<< $(pods |grep $1 |awk '{print $1,$2}')

kubectl edit pods -n ${podns} ${podname}

}
