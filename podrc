## Author: Balakumaran Venkataraman
##
## Add to bashrc
##   source podrc
##
alias k='kubectl'
alias nodes='kubectl get nodes -o wide'
alias ns='kubectl get ns'
alias pods='kubectl get pods -A -o wide'
alias dep='kubectl get deployment -A'
alias ds='kubectl get daemonset -A'
alias rs='kubectl get replicaset -A'
alias jobs='kubectl get jobs -A'
alias events='kubectl get events -A'
alias cm='kubectl get cm -A'
alias svc='kubectl get svc -A'
alias ep='kubectl get ep -A'
alias pvc='kubectl get pvc -A'

alias sc='kubectl get sc'
alias pv='kubectl get pv'

function kg
{
#kubectl get
echo ">>>> $*"

    if [[ -z $1 ]];then
        echo "USAGE: kg <p|d|ds|ss|rs|c|s|j|e|n> namespace # For pod|deploy|daemonset|statefulset|replicaset|cm|service|job|event|nad"
        return
    fi

    construct=$1
    shift
    case $construct in
    p*)
        kubectl get pods -n $@
        ;;
    d)
        kubectl get deploy -n $@
        ;;
    ds*)
        kubectl get daemonset -n $@
        ;;    
    ss*)
        kubectl get statefulset -n $@
        ;;
    rs*)
        kubectl get replicaset -n $@
        ;;
    s)
        kubectl get svc -n $@
        ;;
    c*)
        kubectl get cm -n $@
        ;;
    j*)
        kubectl get job -n $@
        ;;
    e*)
        kubectl get event -n $@
        ;;
    n*)
        kubectl get net-attach-def -n $@
        ;;
    esac
}

function kd
{
#kubectl describe
echo ">>>> $*"

    if [[ -z $1 ]];then
        echo "USAGE: kd <p|d|ds|ss|rs|c|s|j|e|pv|n> name # For pod|deploy|daemonset|statefulset|replicaset|cm|service|job|event|pvc|nad"
        return
    fi

    arg=$1
    shift
    karg=$@
    construct=
    case $arg in
    p*)
        construct=pod
        ;;
    d)
        construct=deployment
        ;;
    ds*)
        construct=daemonset
        ;;
    ss*)
        construct=statefulset
        ;;
    rs*)
        construct=replicaset
        ;;
    s)
        construct=service
        ;;
    c*)
        construct=cm
        ;;
    j*)
        construct=job
        ;;
    e*)
        construct=event
        ;;
    pv*)
        construct=pvc
        ;;
    n*)
        construct=net-attach-def
        ;;
    esac

    echo ">>>> $karg"
    read -r kns kname <<< $(kubectl get $construct -A |grep $1 |awk '{print $1,$2}')
    kubectl describe $construct -n ${kns} ${kname}

}


function ke
{
#kubectl edit
echo ">>>> $*"

    if [[ -z $1 ]];then
        echo "USAGE: ke <p|d|ds|ss|rs|c|s|j|e|pv|n> name # For pod|deploy|daemonset|statefulset|replicaset|cm|service|job|event|pvc|nad"
        return
    fi

    arg=$1
    shift
    karg=$@
    construct=
    case $arg in
    p*)
        construct=pod
        ;;
    d)
        construct=deployment
        ;;
    ds*)
        construct=daemonset
        ;;
    ss*)
        construct=statefulset
        ;;
    rs*)
        construct=replicaset
        ;;
    s)
        construct=service
        ;;
    c*)
        construct=cm
        ;;
    j*)
        construct=job
        ;;
    e*)
        construct=event
        ;;

    pv*)
        construct=pvc
        ;;
    n*)
        construct=net-attach-def
        ;;
    esac

    echo ">>>> $karg"
    read -r kns kname <<< $(kubectl get $construct -A |grep $1 |awk '{print $1,$2}')
    kubectl edit $construct -n ${kns} ${kname}
}




function podexec
{
echo ">>>> $*"

read -r podns podname <<< $(pods |grep $1 |awk '{print $1,$2}')

shift
if [[ "$1" == bash ]]; then
     kubectl exec -it ${podname} -n ${podns}  -- sh -c "bash || sh"
else
  kubectl exec -it ${podname} -n ${podns} -- $@
fi
}

function podssh
{
podexec $1 bash
}

function poddel
{

echo ">>>> $*"
read -r podns podname <<< $(pods |grep $1 |awk '{print $1,$2}')

kubectl delete pods -n ${podns} ${podname}
}

function poddelf
{

echo ">>>> $*"
read -r podns podname <<< $(pods |grep $1 |awk '{print $1,$2}')

kubectl delete pods -n ${podns} ${podname} --grace-period=0 --force
} 

function poddes
{
echo ">>>> $*"
read -r podns podname <<< $(pods |grep $1 |awk '{print $1,$2}')

kubectl describe pods -n ${podns} ${podname}
}

function podedit
{

echo ">>>> $*"
read -r podns podname <<< $(pods |grep $1 |awk '{print $1,$2}')

kubectl edit pods -n ${podns} ${podname}

}

